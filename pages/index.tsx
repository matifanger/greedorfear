import type { NextPage } from 'next'
import PropTypes from 'prop-types'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import GaugeChart from 'react-gauge-chart'

export async function getStaticProps() {
  const getCryptoIndex = await fetch('https://api.alternative.me/fng/?limit=100').then(res => res.json())

  return {
    props: {getCryptoIndex},
  }
}

type tData = {
  value: string,
  value_classification: string,
  timestamp: string,
  time_until_update: string,
}

type HomeProps = {
  getCryptoIndex: {
    name: string
    data: tData[]
  }
}

// 0-25 Extreme Fear
// 25-45 Fear
// 45-55 Neutral
// 55-75 Greed
// 75-100 Extreme Greed

  const Home: NextPage<HomeProps> = ({getCryptoIndex}) => {

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          {getCryptoIndex.name}
        </h1>

        <div className={styles.description}>
        <GaugeChart id="gauge-chart2" 
        nrOfLevels={20} 
        colors={['#5BE12C', '#F5CD19', '#EA4228']}
        percent={0.+ parseInt(getCryptoIndex.data[0].value)} 
        textColor="#000000"
        formatTextValue={(value: any) => 'Extreme Fear'+value}
      />
              <GaugeChart id="gauge-chart2" 
        nrOfLevels={20} 
        colors={['#5BE12C', '#F5CD19', '#EA4228']}
        percent={0.+ parseInt(getCryptoIndex.data[0].value)} 
        textColor="#000000"
        formatTextValue={(value: any) => 'Extreme Fear'+value}
      />
        </div>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://matifanger.dev"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by Matias Fanger
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

Home.propTypes = {
  getCryptoIndex: PropTypes.func.isRequired,
}

export default Home
